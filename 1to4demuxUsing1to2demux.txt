`timescale 1ns / 1ps

module demux1to2(input i,input s,output o0,output o1);

assign o0 = ~s&i;
assign o1 = s&i;

endmodule

-----------

`timescale 1ns / 1ps

module demux1to4(input i,input s0,input s1,output y0,output y1,output y2,output y3);

demux1to2 sel(.i(i),.s(s1),.o0(temp0),.o1(temp1));

demux1to2 first(.i(temp0),.s(s0),.o0(y0),.o1(y1));

demux1to2 second(.i(temp1),.s(s0),.o0(y2),.o1(y3));

endmodule

-----------
`timescale 1ns / 1ps

module tb_demux();

reg ti,ts0,ts1;
wire ty0,ty1,ty2,ty3;

demux1to4 demux(.i(ti),.s0(ts0),.s1(ts1),.y0(ty0),.y1(ty1),.y2(ty2),.y3(ty3));

initial begin

ti=1;
ts0=0; ts1=0; 
#10

ti=1;
ts0=1; ts1=0;
#10

ti=1;
ts0=0; ts1=1;
#10

ti=1;
ts0=1; ts1=1;
#10

$stop;
end

endmodule


